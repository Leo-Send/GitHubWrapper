package de.uni_passau.fim.gitwrapper;

import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;

import java.time.OffsetDateTime;

/**
 * A skeleton for information about Events.
 */
public abstract class EventData {

    @SerializedName(value = "user", alternate = {"actor"})
    UserData user;
    OffsetDateTime created_at;
    String event;

    /**
     * The User that created the Event.
     */
    public UserData getUser() {
        return user;
    }

    /**
     * The date and time the Event was created.
     */
    public OffsetDateTime getCreateDate() {
        return created_at;
    }

    /**
     * The event typ.
     */
    public String getEvent() {
        return event;
    }

    /**
     * A generic event.
     */
    class DefaultEventData extends EventData {}

    /**
     * An Event generated by a change of labels.
     */
    public class LabeledEventData extends EventData {

        LabelData label;
        boolean added = true;

        /**
         * The name of the label.
         */
        public String getName() {
            return label.name;
        }

        /**
         * The color of the label as hex code.
         */
        public String getColor() {
            return label.color;
        }

        /**
         * A short description of the label.
         */
        public String getDescription() {
            return label.description;
        }

        /**
         * Checks it the label was added with this event.
         *
         * @return {@code true} if this LabelEvent has added a label
         */
        public boolean isAdded() {
            return added;
        }

        /**
         * Information about the label
         */
        class LabelData {
            String name;
            String color;
            String description;
        }
    }

    /**
     * An Event generated by referencing an {@link IssueData#number Issue} in a {@link Commit}.
     */
    public class ReferencedEventData extends EventData {

        @Expose(deserialize = false)
        Commit commit;

        /**
         * The commit references.
         */
        public Commit getCommit() {
            return commit;
        }
    }
}
