plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'application'
}

version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'

    //null annotation
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'

    // arg parser for issue runner
    compile group: 'args4j', name: 'args4j', version: '2.33'

    // better http client
    compile 'org.apache.httpcomponents:httpclient:4.5.5'
    compile 'org.apache.httpcomponents:fluent-hc:4.5.5'

    //json
    compile 'com.google.code.gson:gson:2.7'
    compile 'io.gsonfire:gson-fire:1.8.0'

    //GitWrapper
    compile project(':GitWrapper')

    // The tooling API need an SLF4J implementation available at runtime, replace this with any other implementation
    runtime 'org.slf4j:slf4j-simple:1.7.21'
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': "de.uni_passau.fim.issuerunner.IssueRunner"
        )
    }
}

startScripts {
    applicationName = rootProject.name
    mainClassName = "de.uni_passau.fim.issuerunner.IssueRunner"
}
