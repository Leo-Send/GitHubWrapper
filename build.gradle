plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'application'
    id "com.github.hierynomus.license" version "0.16.1" // Used to ensure that licence headers are applied consistently
}

version '1.0-SNAPSHOT'

compileJava {
    sourceCompatibility = '11'
    targetCompatibility = '11'
    //options.compilerArgs += ['--release', '8']
    //options.compilerArgs.addAll('--release', '8')
}

repositories {
    mavenCentral()
    maven {
        url 'https://gitlab.infosun.fim.uni-passau.de/api/v4/projects/253/packages/maven'
    }
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.11'

    //null annotation
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'

    // arg parser for issue runner
    implementation group: 'args4j', name: 'args4j', version: '2.33'

    // better http client
    implementation 'org.apache.httpcomponents:httpclient:4.5.5'
    implementation 'org.apache.httpcomponents:fluent-hc:4.5.5'

    implementation group: 'commons-lang', name: 'commons-lang', version: '2.6'
    implementation 'commons-io:commons-io:2.6'

    //json
    implementation 'com.google.code.gson:gson:2.7'
    implementation 'io.gsonfire:gson-fire:1.8.0'

    //GitWrapper
    //implementation project(':GitWrapper')
    implementation 'de.uni_passau.fim.seibt:gitwrapper:2022.1'
    //maven {
    //    url 'https://gitlab.infosun.fim.uni-passau.de/api/v4/projects/253/packages/maven'
    //}

    // The tooling API need an SLF4J implementation available at runtime, replace this with any other implementation
    implementation 'org.slf4j:slf4j-simple:1.7.21'
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes(
//                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': "de.uni_passau.fim.issuerunner.IssueRunner"
        )
    }

    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

startScripts {
    applicationName = rootProject.name
    mainClassName = "de.uni_passau.fim.issuerunner.IssueRunner"
}

license {
    header = file('LICENSE_HEADER')
    //strictCheck = true
    skipExistingHeaders = true
}
